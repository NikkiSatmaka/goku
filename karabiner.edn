{
    :profiles {
        :grn {
            :default true
            :sim      200 ; keys need to be pressed within this threshold to be considered simultaneous
            :simlayer-threshold 450 ; ???????
            :delay    500 ; time after which the key press is count delayed
            :alone    500 ; hold for 495ms and single tap registered; hold for 505ms and seen as modifier
            :held    1000 ; key is fired twice when 1000 ms is elapsed (otherwise seen as a hold command)
        }
    }

    :templates {
        :open "osascript -e 'tell application \"%s\" to activate'"
        :paste "osascript -e '
              set the clipboard to \"%s\"
              set the clipboard to the clipboard + \"%s\"
              tell application \"System Events\"
                      keystroke \"v\" using command down
              end tell
              '"
        :sleep "sleep %s" ; sample placeholder
    }

    :applications {
        :terminals [ "net.kovidgoyal.kitty" ]
        :safari [ "^com.apple.Safari$" ]
        :vscode [ "^com.microsoft.VSCode$" ]
    }

    :froms {
        :any_key {:any :key_code}
        :any_consumer {:any :consumer_key_code }
        :any_button {:any :pointing_button}

        ;alias
        :delete {:key :delete_or_backspace}
        :return {:key :return_or_enter}
        :btick {:key :grave_accent_and_tilde}
        :bslash {:key :backslash}
        :ls {:key :left_shift}
        :rs {:key :right_shift}

        ;colemak froms (for easier mnemonics)
        :-q {:key :q}
        :-w {:key :w}
        :-f {:key :e}
        :-p {:key :r}
        :-g {:key :t}
        :-j {:key :y}
        :-l {:key :u}
        :-u {:key :i}
        :-y {:key :o}
        :-semicolon {:key :p}

        :-a {:key :a}
        :-r {:key :s}
        :-s {:key :d}
        :-t {:key :f}
        :-d {:key :g}
        :-h {:key :h}
        :-n {:key :j}
        :-e {:key :k}
        :-i {:key :l}
        :-o {:key :semicolon}

        :-z {:key :z}
        :-x {:key :x}
        :-c {:key :c}
        :-v {:key :v}
        :-b {:key :b}
        :-k {:key :n}
        :-m {:key :m}
    }

    :tos {
        ;colemak tos (for easier string sending)
        :-q {:key :q}
        :-w {:key :w}
        :-f {:key :e}
        :-p {:key :r}
        :-g {:key :t}
        :-j {:key :y}
        :-l {:key :u}
        :-u {:key :i}
        :-y {:key :o}
        :-semicolon {:key :semicolon}

        :-a {:key :a}
        :-r {:key :s}
        :-s {:key :d}
        :-t {:key :f}
        :-d {:key :g}
        :-h {:key :h}
        :-n {:key :j}
        :-e {:key :k}
        :-i {:key :l}
        :-o {:key :semicolon}

        :-z {:key :z}
        :-x {:key :x}
        :-c {:key :c}
        :-v {:key :v}
        :-b {:key :b}
        :-k {:key :n}
        :-m {:key :m}
    
        ;named symbols
        :exclaim {:key :1 :modi :shift}
        :at {:key :2 :modi :shift}
        :hash {:key :3 :modi :shift}
        :dollar {:key :4 :modi :shift}
        :percent {:key :5 :modi :shift}
        :caret {:key :6 :modi :shift}
        :ampersand {:key :7 :modi :shift}
        :bullet {:key :8 :modi :shift}
        :open_paren {:key :9 :modi :shift}
        :close_paren {:key :0 :modi :shift}
        :hyphen {:key :hyphen}
        :underscore {:key :hyphen :modi :shift}
        :equal {:key :equal_sign}
        :plus {:key :equal_sign :modi :shift}
        :semicolon {:key :semicolon}
        :colon {:key :semicolon :modi :shift}
        :open_bracket {:key :open_bracket}
        :close_bracket {:key :close_bracket}
        :open_brace {:key :open_bracket :modi :shift}
        :close_brace {:key :close_bracket :modi :shift}
        :less_than {:key :comma :modi :shift}
        :greater_than {:key :period :modi :shift}
        :backquote {:key :grave_accent_and_tilde}
        :tilde {:key :grave_accent_and_tilde :modi :shift}
        :dquote {:key :quote :modi :shift}
        :pipe {:key :backslash :modi :shift}
        :question {:key :slash :modi :shift}
        :ls {:key :left_shift}
        :rs {:key :right_shift}

        ; system-wide shortcuts
        :command_tab {:key :!Ctab}
        :left_desktop {:key :!!left_arrow}
        :right_desktop {:key :!!right_arrow} 
        :mission_control {:key :!!up_arrow}
        :internet_query {:key :!!t}
        :show_application_windows {:key :!!down_arrow}
        :show_desktop {:key :!!f12}
        :activate_spotlight {:key :!!spacebar}
        :fullscreen_snapshot {:key :!CS3}
        :window_snapshot {:key :!CS4}
        :selection_snapshot {:key :!CS5}
        :emoji_picker {:key :spacebar :modi [:control :command]} ;!CTspacebar
        :system-new_tab {:key :!Ct}
        :system-close_tab {:key :!Cw}
        :system-force_quit_apps {:key :!COescape}

        ; 1password
        :activate_1password {:key :!!backslash}
        ; hazeover - focus on one window
        :activate_hazeover {:key :!!return_or_enter}
        ; mosaic - window positioning
        :window_align_left {:key :!!u}
        :window_align_right {:key :!!o}
        :window_center {:key :!!i}
        :window_full_size {:key :!!p}
        ; vscode
        :toggle_terminal_or_editor {:key :!Cspacebar}
        :focus_group_or_terminal_left {:key :!CTOup_arrow}
        :focus_group_or_terminal_right {:key :!CTOdown_arrow}
        :focus_editor_left {:key :!COleft_arrow}
        :focus_editor_right {:key :!COright_arrow}
        :focus_file_or_new_tab {:key :!Cp}
        ; kitty
        :kitty-prev_tab {:key :!Cleft_arrow}
        :kitty-next_tab {:key :!Cright_arrow}
        :kitty-move_tab_left {:key :!COleft_arrow}
        :kitty-move_tab_right {:key :!COright_arrow}
        :kitty-word_left {:key :!Tleft_arrow}
        :kitty-word_right {:key :!Tright_arrow}
        :kitty-beginning_of_line {:key :!Ta}
        :kitty-end_of_line {:key :!Te}
        ; safari
        :safari-prev_tab {:key :!TStab}
        :safari-next_tab {:key :!Ttab}
        :safari-hist_back {:key :!Copen_bracket}
        :safari-hist_frwd {:key :!Cclose_bracket}
        :safari-toggle_reader {:key :!CSr}
    }

    :simlayers {
        :apps {:key :a}
        :desktop {:key :f}
    }

    :main [
        {
            :des "Old Style Layers w/ a Twist"
            :rules [
                ; RESET ALL LAYERS
                [:!COTescape [["extend" 0], ["apps" 0], ["desktop" 0], ["command" 0], ["mouse" 0], ["symbols" 0], ["shifted" 0], ["ctrl" 0], ["emoji" 0], ["system" 0]]]
                ; caps lock
                ; press and hold -> extend layer
                ; press and release -> escape
                [:##caps_lock ["extend" 1] [:!symbols :!mouse :!shifted :!system] {:afterup ["extend" 0] :alone :escape}]
                ; left command
                ; press and hold -> command modifier
                ; press and release -> command layer (sequences)
                ; press twice and hold -> mouse layer
                ; press twice and release -> capslock layer
                [:left_command :left_command :!command {:alone ["command" 1] :delayed {:invoked ["command" 0] :cancelled ["command" 0]}}]
                [:left_command [["mouse" 1], ["command" 0]] :command {:afterup [["command" 0], ["mouse" 0]] :alone :!Ctab}]
                ; backtick
                ; sequence layer
                [:btick :left_shift [:!sequence :!shifted] {:alone ["symbols" 1] :delayed {:invoked ["sequence" 0] :cancelled ["sequence" 0]}}]
                ; slash
                ; shifted layer
                [:slash :right_shift [:!shifted :!sequence] {:alone ["shifted" 1] :delayed {:invoked ["shifted" 0] :cancelled ["shifted" 0]}}]
                ; symbols layer
                [:btick :left_shift [:!symbols :!shifted] {:alone ["symbols" 1] :delayed {:invoked ["symbols" 0] :cancelled ["symbols" 0]}}]
                ; slash
                ; shifted layer
                [:slash :right_shift [:!shifted :!symbols] {:alone ["shifted" 1] :delayed {:invoked ["shifted" 0] :cancelled ["shifted" 0]}}]
                ; backtick (while in shifted layer)
                ; activate emoji layer
                [:btick ["emoji" 1] :shifted {:afterup ["shifted" 0] :delayed {:invoked ["emoji" 0]}}]
                ; right shift - activate ctrl sequence layer
                [:right_shift :right_shift nil {:alone ["ctrl" 1] :delayed {:invoked ["ctrl" 0]}}]
                ; fn key
                ; system layer
                [:fn ["system" 1] nil {:afterup ["system" 0] :alone :show_desktop}]
            ]
        }

        {
            :des "Chords - Navigation and Application Switching "
            :rules [
                ; navigational extensions
                :extend
                    ; functions
                    [:##1 :f1][:##2 :f2][:##3 :f3][:##4 :f4][:##5 :f5][:##6 :f6]
                    [:##7 :f7][:##8 :f8][:##9 :f9][:##0 :f10][:##hyphen :f11][:##equal_sign :f12]
                    ; modifiers
                    [:##a :left_control][:##s :left_shift][:##d :left_option][:##f :left_command]
                    ; arrows
                    [:##j :left_arrow]
                    [:##k :down_arrow]
                    [:##i :up_arrow]
                    [:##l :right_arrow]
                    ; shortcuts
                    [:##u :!Cleft_arrow :!terminals]
                    [:##o :!Cright_arrow :!terminals]
                    ; switch app windows
                    [:##p :!Cgrave_accent_and_tilde]
                    ; undo, cut, copy, paste
                    [:##z :!Cz][:##x :!Cx][:##c :!Cc][:##v :!Cv]
                    ; edit/organize text properly
                    [:##spacebar :return_or_enter]
                    [:##semicolon :delete_or_backspace]
                    [:##delete_or_backspace :caps_lock]
                    ; quick send in vscode, mailmate, others
                    [:##return_or_enter :!Creturn_or_enter]

                ; application switching
                :apps
                    ; most used apps
                    [:-w [:open "WhatsApp"]]              ; whatsapp
                    [:-t [:open "Kitty"]]                 ; terminal
                    [:-s [:open "Drafts"]]                ; drafts
                    [:-v [:open "Preview"]]               ; preView
                    [:-n [:open "Safari"]]                ; navigator
                    [:-e [:open "Visual Studio Code"]]    ; editor
                    [:-f [:open "Type Fu"]]               ; typeFu
                    [:-m [:open "Mailmate"]]              ; mail
                    ; others
                    [:-p :activate_1password]             ; password_manager
                    [:-y :internet_query]                 ; internet querY
                    [:spacebar :activate_spotlight]       ; spotlight

                ; desktop switching
                :desktop
                    [:j :!!1]
                    [:k :!!2]
                    [:l :!!3]
                    [:semicolon :!!4]
                    [:quote :!!5]

                ; chords - window positioning, focus, mission control, snapshot, force quit
                :system
                    ; global shortcuts
                    [:spacebar :system-force_quit_apps]
                    [:u :mission_control]
                    [:o :show_application_windows]
                    ; snapshot stuff
                    [:q :fullscreen_snapshot]
                    [:w :window_snapshot]
                    ; focus on one window (using Hazeover)
                    [:return_or_enter :activate_hazeover]
                    ; window positioning (using Rectangle)
                    [:j :window_align_left]
                    [:k :window_center]
                    [:l :window_align_right]
                    [:i :window_full_size]

                ; chords - mouse navigation
                :mouse
                    ; hold f to slow down to 1/4 of default speed
                    [:caps_lock {:mkey {:speed 0.25}}]
                    ; navigate quickly around the screen
                    [:k {:mkey {:y 4000}}]
                    [:i {:mkey {:y -4000}}]
                    [:j {:mkey {:x -4000}}]
                    [:l {:mkey {:x 4000}}]
                    ; mouse buttons
                    [:u {:pkey :button1}]
                    [:o {:pkey :button2}]

                ; chords - safari
                :safari
                    [:-semicolon :safari-toggle_reader [:safari :!symbols]]
                    [:comma :safari-prev_tab [:safari :extend]]
                    [:period :safari-next_tab [:safari :extend]]
                    [:!Cperiod :safari-hist_frwd]
                    [:!Ccomma :safari-hist_back]

                ; chords - terminals
                :terminals
                    ; [:-semicolon :toggle_terminal_or_editor [:terminals :!symbols]]
                    [:u :kitty-beginning_of_line [:terminals :extend]]
                    [:o :kitty-end_of_line [:terminals :extend]]
                    [:!Cu :kitty-word_left [:terminals :extend]]
                    [:!Co :kitty-word_right [:terminals :extend]]
                    [:comma :kitty-prev_tab [:terminals :extend]]
                    [:period :kitty-next_tab [:terminals :extend]]
                    [:!Ccomma :kitty-move_tab_left :terminals]
                    [:!Cperiod :kitty-move_tab_right :terminals]

                :vscode
                    [:-semicolon :toggle_terminal_or_editor [:vscode :!symbols]]
                    [:left_command :toggle_terminal_or_editor :!shifted {:afterup ["shifted" 0]}]
                    [:right_option :left_control :!command {:alone :focus_file_or_new_tab}]
                    [:comma :focus_group_or_terminal_left [:vscode :extend]]
                    [:period :focus_group_or_terminal_right [:vscode :extend]]
                    [:!Ccomma :focus_editor_left]
                    [:!Cperiod :focus_editor_right]
            ]
        }


        {
            :des "Sequences - Editing and App Shortcuts"
            :rules [
                ; sequence - symbols
                :symbols
                    [:btick :colon nil {:afterup ["symbols" 0]}]           ; ?
                    [:left_shift :colon nil {:afterup ["symbols" 0]}]      ; same as above for keys where tilde is NOT next to shift
                    [:-w :tilde nil {:afterup ["symbols" 0]}]              ; wave
                    [:-p :percent nil {:afterup ["symbols" 0]}]            ; percent
                    [:-l :plus nil {:afterup ["symbols" 0]}]               ; pLus
                    [:-u :underscore nil {:afterup ["symbols" 0]}]         ; underscore
                    [:-y :hyphen nil {:afterup ["symbols" 0]}]             ; hYphen
                    [:-semicolon :backquote nil {:afterup ["symbols" 0]}]  ; ?
                    [:-a :at nil {:afterup ["symbols" 0]}]                 ; at
                    [:-s :ampersand nil {:afterup ["symbols" 0]}]          ; amperSand
                    [:-d :dollar nil {:afterup ["symbols" 0]}]             ; dollar
                    [:-h :hash nil {:afterup ["symbols" 0]}]               ; hash
                    [:-e :exclaim nil {:afterup ["symbols" 0]}]            ; exclaim
                    [:-o :semicolon nil {:afterup ["symbols" 0]}]          ; semicOlon
                    [:-c :caret nil {:afterup ["symbols" 0]}]              ; caret
                    [:-v :pipe nil {:afterup ["symbols" 0]}]               ; vertical
                    [:-b :backslash nil {:afterup ["symbols" 0]}]          ; backslash
                    [:-k :equal nil {:afterup ["symbols" 0]}]              ; eKual
                    [:-m :bullet nil {:afterup ["symbols" 0]}]             ; multiply
                    [:slash :!Sslash nil {:afterup ["symbols" 0]}]         ; slash
                    [:up_arrow :!Sslash nil {:afterup ["symbols" 0]}]      ; slash

                ; sequence - parens, brackets and braces
                :symbols
                    [:-g :open_brace nil {:afterup ["symbols" 0]}]
                    [:-j :close_brace nil {:afterup ["symbols" 0]}]
                    [:-r :open_bracket nil {:afterup ["symbols" 0]}]
                    [:-t :open_paren nil {:afterup ["symbols" 0]}]
                    [:-n :close_paren nil {:afterup ["symbols" 0]}]
                    [:-i :close_bracket nil {:afterup ["symbols" 0]}]

                ; sequence - work helpers
                :symbols
                    [:spacebar :return_or_enter nil {:afterup ["symbols" 0]}]
                    [:return_or_enter :!Creturn_or_enter nil {:afterup ["symbols" 0]}]

                ; sequence - cancelled keypresses (can be repurposed)
                :symbols
                    [:-q :vk_none nil {:afterup ["symbols" 0]}]         ; equal
                    [:-f :vk_none nil {:afterup ["symbols" 0]}]
                    [:-x :vk_none nil {:afterup ["symbols" 0]}]
                    [:-z :vk_none nil {:afterup ["symbols" 0]}]
                    [:hyphen :vk_none nil {:afterup ["symbols" 0]}]
                    [:equal_sign :vk_none nil {:afterup ["symbols" 0]}]
                    [:open_bracket :vk_none nil {:afterup ["symbols" 0]}]
                    [:close_bracket :vk_none nil {:afterup ["symbols" 0]}]

                ; sequence - symbols on the original keys but shifted for ease of use
                :symbols
                    [:comma :less_than nil {:afterup ["sequence" 0]}]
                    [:period :greater_than nil {:afterup ["sequence" 0]}]
                    [:quote :dquote nil {:afterup ["sequence" 0]}]
                    [:backslash :pipe nil {:afterup ["sequence" 0]}]
                    [:btick :tilde nil {:afterup ["sequence" 0]}]

                ; command - tab switching
                :command
                    [:1 :!C1 nil {:afterup ["command" 0]}]
                    [:2 :!C2 nil {:afterup ["command" 0]}]
                    [:3 :!C3 nil {:afterup ["command" 0]}]
                    [:4 :!C4 nil {:afterup ["command" 0]}]
                    [:5 :!C5 nil {:afterup ["command" 0]}]
                    [:6 :!C6 nil {:afterup ["command" 0]}]
                    [:7 :!C7 nil {:afterup ["command" 0]}]
                    [:8 :!C8 nil {:afterup ["command" 0]}]
                    [:9 :!C9 nil {:afterup ["command" 0]}]
                    [:0 :!C0 nil {:afterup ["command" 0]}]

                ; press command+key
                :command
                    [:-q :!Cq nil {:afterup ["command" 0]}]
                    [:-w :!Cw nil {:afterup ["command" 0]}]
                    [:-f :!Cf nil {:afterup ["command" 0]}]
                    [:-p :!Cp nil {:afterup ["command" 0]}]
                    [:-g :!Cg nil {:afterup ["command" 0]}]
                    [:-j :!Cj nil {:afterup ["command" 0]}]
                    [:-l :!Cl nil {:afterup ["command" 0]}]
                    [:-u :!Cu nil {:afterup ["command" 0]}]
                    [:-y :!Cy nil {:afterup ["command" 0]}]
                    [:-a :!Ca nil {:afterup ["command" 0]}]
                    [:-r :!Cr nil {:afterup ["command" 0]}]
                    [:-s :!Cs nil {:afterup ["command" 0]}]
                    [:-t :!Ct nil {:afterup ["command" 0]}]
                    [:-d :!Cd nil {:afterup ["command" 0]}]
                    [:-h :!Ch nil {:afterup ["command" 0]}]
                    [:-n :!Cn nil {:afterup ["command" 0]}]
                    [:-e :!Ce nil {:afterup ["command" 0]}]
                    [:-i :!Ci nil {:afterup ["command" 0]}]
                    [:-o :!Co nil {:afterup ["command" 0]}]
                    [:-x :!Cx nil {:afterup ["command" 0]}]
                    [:-c :!Cc nil {:afterup ["command" 0]}]
                    [:-v :!Cv nil {:afterup ["command" 0]}]
                    [:-b :!Cb nil {:afterup ["command" 0]}]
                    [:-k :!Ck nil {:afterup ["command" 0]}]
                    [:-m :!Cm nil {:afterup ["command" 0]}]

                :shifted
                    [:-q :!Sq nil {:afterup ["shifted" 0]}]
                    [:-w :!Sw nil {:afterup ["shifted" 0]}]
                    [:-f :!Sf nil {:afterup ["shifted" 0]}]
                    [:-p :!Sp nil {:afterup ["shifted" 0]}]
                    [:-g :!Sg nil {:afterup ["shifted" 0]}]
                    [:-j :!Sj nil {:afterup ["shifted" 0]}]
                    [:-l :!Sl nil {:afterup ["shifted" 0]}]
                    [:-u :!Su nil {:afterup ["shifted" 0]}]
                    [:-y :!Sy nil {:afterup ["shifted" 0]}]
                    [:-a :!Sa nil {:afterup ["shifted" 0]}]
                    [:-r :!Sr nil {:afterup ["shifted" 0]}]
                    [:-s :!Ss nil {:afterup ["shifted" 0]}]
                    [:-t :!St nil {:afterup ["shifted" 0]}]
                    [:-d :!Sd nil {:afterup ["shifted" 0]}]
                    [:-h :!Sh nil {:afterup ["shifted" 0]}]
                    [:-n :!Sn nil {:afterup ["shifted" 0]}]
                    [:-e :!Se nil {:afterup ["shifted" 0]}]
                    [:-i :!Si nil {:afterup ["shifted" 0]}]
                    [:-o :!So nil {:afterup ["shifted" 0]}]
                    [:-z :!Sz nil {:afterup ["shifted" 0]}]
                    [:-x :!Sx nil {:afterup ["shifted" 0]}]
                    [:-c :!Sc nil {:afterup ["shifted" 0]}]
                    [:-v :!Sv nil {:afterup ["shifted" 0]}]
                    [:-b :!Sb nil {:afterup ["shifted" 0]}]
                    [:-k :!Sk nil {:afterup ["shifted" 0]}]
                    [:-m :!Sm nil {:afterup ["shifted" 0]}]
                    [:slash :slash nil {:afterup ["shifted" 0]}]

                :ctrl
                    [:-q :!Tq nil {:afterup ["ctrl" 0]}]
                    [:-w :!Tw nil {:afterup ["ctrl" 0]}]
                    [:-f :!Tf nil {:afterup ["ctrl" 0]}]
                    [:-p :!Tp nil {:afterup ["ctrl" 0]}]
                    [:-g :!Tg nil {:afterup ["ctrl" 0]}]
                    [:-j :!Tj nil {:afterup ["ctrl" 0]}]
                    [:-l :!Tl nil {:afterup ["ctrl" 0]}]
                    [:-u :!Tu nil {:afterup ["ctrl" 0]}]
                    [:-y :!Ty nil {:afterup ["ctrl" 0]}]
                    [:-a :!Ta nil {:afterup ["ctrl" 0]}]
                    [:-r :!Tr nil {:afterup ["ctrl" 0]}]
                    [:-s :!Ts nil {:afterup ["ctrl" 0]}]
                    [:-t :!Tt nil {:afterup ["ctrl" 0]}]
                    [:-d :!Td nil {:afterup ["ctrl" 0]}]
                    [:-h :!Th nil {:afterup ["ctrl" 0]}]
                    [:-n :!Tn nil {:afterup ["ctrl" 0]}]
                    [:-e :!Te nil {:afterup ["ctrl" 0]}]
                    [:-i :!Ti nil {:afterup ["ctrl" 0]}]
                    [:-o :!To nil {:afterup ["ctrl" 0]}]
                    [:-z :!Tz nil {:afterup ["ctrl" 0]}]
                    [:-x :!Tx nil {:afterup ["ctrl" 0]}]
                    [:-c :!Tc nil {:afterup ["ctrl" 0]}]
                    [:-v :!Tv nil {:afterup ["ctrl" 0]}]
                    [:-b :!Tb nil {:afterup ["ctrl" 0]}]
                    [:-k :!Tk nil {:afterup ["ctrl" 0]}]
                    [:-m :!Tm nil {:afterup ["ctrl" 0]}]
                    [:slash :slash nil {:afterup ["ctrl" 0]}]
                    [:up_arrow :slash nil {:afterup ["ctrl" 0]}]

                ; show me some emojis
                :emoji
                    [:btick :emoji_picker nil {:afterup ["emoji" 0]}] ;
                    [:-q [:paste "🤫"] nil {:afterup ["emoji" 0]}] ;quiet
                    [:-w [:paste "😉"] nil {:afterup ["emoji" 0]}] ;wink
                    [:-f [:paste "🤦‍♂️"] nil {:afterup ["emoji" 0]}] ;facepalm️
                    [:-p [:paste "🎉"] nil {:afterup ["emoji" 0]}] ;party
                    [:-g [:paste "😬"] nil {:afterup ["emoji" 0]}] ;grimace
                    [:-j [:paste "😂"] nil {:afterup ["emoji" 0]}] ;joking
                    [:-l [:paste "😍"] nil {:afterup ["emoji" 0]}] ;love it
                    [:-u [:paste "🤷‍♂️"] nil {:afterup ["emoji" 0]}] ;shrUg
                    [:-y [:paste "😡"] nil {:afterup ["emoji" 0]}] ;angrY
                    [:-a [:paste "👍"] nil {:afterup ["emoji" 0]}] ;alright
                    [:-r [:paste "🚀"] nil {:afterup ["emoji" 0]}] ;rocket
                    [:-s [:paste "😢"] nil {:afterup ["emoji" 0]}] ;sad
                    [:-t [:paste "🤔"] nil {:afterup ["emoji" 0]}] ;thinking
                    [:-d [:paste "😮"] nil {:afterup ["emoji" 0]}] ;damn!
                    [:-h [:paste "💜"] nil {:afterup ["emoji" 0]}] ;heart
                    [:-n [:paste "👎"] nil {:afterup ["emoji" 0]}] ;nope
                    [:-e [:paste "🙂"] nil {:afterup ["emoji" 0]}] ;smilE
                    [:-i [:paste "👀"] nil {:afterup ["emoji" 0]}] ;I
                    [:-o [:paste "💩"] nil {:afterup ["emoji" 0]}] ;pOop
                    [:-x [:paste "😵"] nil {:afterup ["emoji" 0]}] ;x-eyes
                    [:-c [:paste "👏"] nil {:afterup ["emoji" 0]}] ;clap
                    [:-v [:paste "😎"] nil {:afterup ["emoji" 0]}] ;very cool
                    [:-b [:paste "😊"] nil {:afterup ["emoji" 0]}] ;blush
                    [:-k [:paste "🍺"] nil {:afterup ["emoji" 0]}] ;drink
                    [:-m [:paste "🙏"] nil {:afterup ["emoji" 0]}] ;merçi
            ]
        }


        {
            :des "Keyboard Tweaks"
            :rules [
                ; right command
                ;   press and hold and become left_control
                ;   press and release to switch to last used app
                [:right_command :left_control nil {:alone :command_tab}]

                ; press Cmd+Q twice to quit apps
                [:!C#Pq [:!Cq ["command-q" 0]] ["command-q" 1]]
                [:!C#Pq ["command-q" 1] nil {:delayed {:invoked ["command-q" 0] :canceled ["commandq" 0]}}]
            ]
        }

        {
            :des "Trackpad + Keyboard = Magic"
            :rules [
                ; trackpad - 1 finger resting on it
                [:condi ["multitouch_extension_finger_count_total" 1]]
                    [:-w :!Cw]
                    [:-p :!Ct]
                    ; [:-g :!Cl]
                    ; [:-a :!Cl]
                    ; [:-r :!Cl]
                    [:-s {:pkey :button1 :modi :left_shift}]
                    [:-t {:pkey :button1}]
                    [:-d {:pkey :button1 :modi :left_command}]
                    [:grave_accent_and_tilde :!Tgrave_accent_and_tilde]
                    [:-z :!Cz]
                    [:-x :!Cx]
                    [:-c :!Cc]
                    [:-v :!Cv]
                    [:-b :!CT1]
                    [:spacebar :return_or_enter]
                    [:a :delete_or_backspace]

                ; trackpad - 5 fingers resting on it
                [:condi ["multitouch_extension_finger_count_total" 5]]
                    [:-s :selection_snapshot]
                    [:-t :window_snapshot]
                    [:-d :fullscreen_snapshot]
            ]
        }


     {
            ; make sure that any key that we don't define on a specific
            ; layer will be ignored on that layer, to avoid unexpected
            ; behavior (eg: pressing caps_lock while in a sequence layer)
            :des "Layer Scrubbing - THIS MUST BE ACTIVE"
            :rules [
                ; chords
                :mouse
                    [:any_key :vk_none]
                    [:any_consumer :vk_none]
                ; sequences
                :symbols
                    [:any_key :vk_none nil {:afterup ["symbols" 0]}]
                    [:any_consumer :vk_none nil {:afterup ["symbols" 0]}]
                :command
                    [:any_key :vk_none nil {:afterup ["command" 0]}]
                    [:any_consumer :vk_none nil {:afterup ["command" 0]}]
                :shifted
                    [:any_key :vk_none nil {:afterup ["shifted" 0]}]
                    [:any_consumer :vk_none nil {:afterup ["shifted" 0]}]
                :ctrl
                    [:any_key :vk_none nil {:afterup ["ctrl" 0]}]
                    [:any_consumer :vk_none nil {:afterup ["ctrl" 0]}]
                :emoji
                    [:any_key :vk_none nil {:afterup ["emoji" 0]}]
                    [:any_consumer :vk_none nil {:afterup ["emoji" 0]}]
            ]
        }

        {
            :des "Colemak Layout"
            :rules [
                ; no active layer
                nil
                    ; p is a power key, is defined per app and thus UNdefined on the nil layer
                    [:##e :f][:##r :p][:##t :g][:##y :j][:##u :l][:##i :u][:##o :y][:##p :vk_none]
                    [:##s :r][:##d :s][:##f :t][:##g :d][:##j :n][:##k :e][:##l :i][:##semicolon :o]
                    [:##n :k]
            ]
        }

  ]
}

;; rule [:period ["media-mode" 1] nil {:afterup ["media-mode" 0] :alone :period}]
;;       |_____| |_______________| |_| |_________________________________________|
;;        <from>    <to>      <conditions>         <other options>

;; !  | means mandatory -   modifier(s) alone when pressend change behavior
;; #  | means optional  -   modifiers are optional (but atleast one necessary)

;; :!Ca is keycode :a and prefix a with !C

;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock

;; ## | optional any (this has no effect when used on the RHS; only LHS)
;; !! | command + control + optional + shift (hyper)

;; to understand better how modifiers work in karabiner
;; karabiner definition of mandatory and optional
;; https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/from/modifiers/


;; need to prefix C T O S F with ! or #
;;
;; code for all this:
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/b9b334a187379f9bc8182ad59e2cca2a1789e9c0/src/karabiner_configurator/keys.clj#L68 

;; URL of extend layer - https://forum.colemak.com/topic/2014-extend-extra-extreme/